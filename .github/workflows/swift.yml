# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Xcode Setup
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.2.0'
    - name: Get current date
      id: date
      run: echo "today=$(date +'%Y%m%d')" >> $GITHUB_ENV 
    # - name: Build
    #   run: |
    #     xcodebuild build -project NYTimes.xcodeproj -scheme NYTimes clean build -sdk iphonesimulator CODE_SIGNING_ALLOWED=No
    - name: Run tests
      run: |
        xcodebuild -project NYTimes.xcodeproj -scheme NYTimes -destination 'platform=iOS Simulator,OS=16.2,name=iPhone 14' -enableCodeCoverage YES -resultBundlePath "CodeCoverage${{ env.today }}.xcresult" clean build test
    - name: Generate coverage reports to xml format
      run: |
        curl -L -o xcresultparser.zip "https://github.com/a7ex/xcresultparser/releases/download/1.5.0/xcresultparser.zip"; unzip xcresultparser.zip; rm xcresultparser.zip; chmod +x ~/work/ny-times/ny-times/product/xcresultparser
        ./xcresultparser -o xml ~/work/ny-times/ny-times/"CodeCoverage${{ env.today }}.xcresult" > ~/work/ny-times/ny-times/"CodeCoverage${{ env.today }}.xml"
        cd ../
        ls -al
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: "CodeCoverage${{ env.today }}.xml"
